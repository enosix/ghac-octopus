name: 'Octopus Deploy'
description: |
  Create a release and deployment for Octopus Deploy.
  This action is designed to be use with the following channels:
  - Pull Request
  - Development
  - Release
inputs:
  octopus_server:
    required: true
  octopus_api_key:
    required: true
  octopus_space:
    required: true
  package_id:
    required: true
  project_id:
    required: true
  version:
    required: true
  path:
    required: false
    default: './out'
  alt_packages:
    required: false
    default: ''
  jira_id:
    required: false
    default: ''
  variables:
    required: false
    default: ''
  release:
    required: false
    default: 'true'
  tenant:
    required: false
    default: 'Current'
  environment:
    required: false
    default: 'Development'

outputs:
  version:
    description: "Image Version"
    value: ${{ steps.release.outputs.release_number }}

runs:
  using: "composite"
  steps:
  - name: Make Octopus package 🐙
    uses: OctopusDeploy/create-zip-package-action@v3
    with:
      package_id: ${{ inputs.package_id }}
      version: ${{ inputs.version }}
      output_folder: './pkg'
      base_path: ${{ inputs.path }}
      files: |
        **/*.*

  - name: Push package to Octopus 🐙
    uses: OctopusDeploy/push-package-action@v3
    with:
      server: ${{ inputs.octopus_server }}
      api_key: ${{ inputs.octopus_api_key }}
      space: ${{ inputs.octopus_space }}
      
      overwrite_mode: OverwriteExisting
      packages: |
        ${{ steps.makepkg.outputs.package_file_path }}

  - name: Push build information to Octopus 🐙
    uses: OctopusDeploy/push-build-information-action@v3
    with:
      server: ${{ inputs.octopus_server }}
      api_key: ${{ inputs.octopus_api_key }}
      space: ${{ inputs.octopus_space }}
      
      packages: '${{ inputs.package_id }}'
      version: '${{ inputs.version }}'

  - name: Create release in Octopus Deploy 🐙
    if: inputs.release == 'true'
    id: release
    uses: OctopusDeploy/create-release-action@v3
    with:
      server: ${{ inputs.octopus_server }}
      api_key: ${{ inputs.octopus_api_key }}
      space: ${{ inputs.octopus_space }}
      
      project: ${{ inputs.project_id }}
      channel: ${{ github.event_name == 'pull_request' && 'Pull Request' || github.ref_name == 'main' && 'Development' || github.ref_name == 'master' && 'Development' || 'Release' }}
      release_number: ${{ inputs.version }}-build-${{ github.run_id }}
      packages: |
        ${{ inputs.package_id }}:${{ inputs.version }}
        ${{ inputs.alt_packages }}
      ignore_existing: true
      git_ref: 'main'
      release_notes: |
        ${{ inputs.jira_id != '' && format('[Jira](https://enosix.atlassian.net/browse/{0}) ', inputs.jira_id) || '' }}
        ${{ github.event_name == 'pull_request' && format('[GitHub](https://github.com/{0}/pull/{1}) ', github.repository, github.event.pull_request.number) || '' }}
        ${{ github.event_name == 'pull_request' && github.event.pull_request.body || '' }}
        ${{ github.ref_name == 'main' && format('[Main branch](https://github.com/{0}) build {1}', github.repository, github.sha) || '' }}
        ${{ github.ref_name == 'master' && format('[Main branch](https://github.com/{0}) build {1}', github.repository, github.sha) || '' }}
        ${{ github.ref_type == 'tag' && format('Release for {0}', github.ref_name)  || ''}}

  - name: Deploy release in Octopus Deploy 🐙
    if: github.ref_name == 'main' && inputs.release == 'true' || github.ref_name == 'master' && inputs.release == 'true'
    uses: OctopusDeploy/deploy-release-tenanted-action@v3
    with:
      server: ${{ inputs.octopus_server }}
      api_key: ${{ inputs.octopus_api_key }}
      space: ${{ inputs.octopus_space }}
      tenants: |
        ${{ inputs.tenant }}
      project: ${{ inputs.project_id }}
      release_number: ${{ steps.release.outputs.release_number }}
      environment: ${{ inputs.environment }}
      variables: |
        ${{ inputs.variables }}

    - name: Add Comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🟢 Release Generated: [${{ inputs.version }}]' + 
              '(https://enosix.octopus.app/app#/${{ inputs.octopus_space }}/projects/${{ inputs.project_id }}/deployments/releases/${{ inputs.version }})'
          })
